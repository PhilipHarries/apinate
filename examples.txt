
Examples

template
--------

<html>
  <head></head>
  <body>
	  <h3>SPECIAL Output</h3>
{{ range $line := .content }}
	<p>{{ $line }}</p>
{{ end }}
  </body>
</html>


querykeys
---------


script
------

#!/usr/bin/env bash

db=/tmp/people

main() {

   for keyval in $*;do
      key=$(echo ${keyval}|awk -F= '{print $1}')
      val=$(echo ${keyval}|awk -F= '{print $2}')
      if [[ "${key}" == "name" ]];then
         name="${val}"
      elif [[ "${key}" == "age" ]];then
         age="${val}"
      elif [[ "${key}" == "fn" ]];then
         function="${val}"
      else
         echo "unknown param ${keyval}"
         exit 1
      fi
   done

   [[ ! -f "${db}" ]] && touch "${db}"
   if [[ "${function}" == "update" || "${function}" == "add" ]];then
      if [[ -z "${age}" ]];then
         echo "No age passed with update function"
         exit 2
      elif [[ -z "${name}" ]];then
         echo "No name passed with update function"
         exit 2
      else
         do_update ${name} ${age}
      fi
   elif [[ "${function}" == "remove" ]];then
      if [[ -z "${name}" ]];then
         echo "No name passed with remove function"
         exit 3
      else
         do_remove ${name}
      fi
   elif [[ "${function}" == "list" ]];then
      if [[ -z "${name}" ]];then
         do_list
      else
         do_single_list ${name}
      fi
   else
      echo "unknown function ${function}"
      exit 4
   fi
}

do_update() {
  do_remove "${1}" >/dev/null
  echo "${1}:${2}" >> "${db}"
  echo "updated ${1}"
} 

do_remove() {
  grep -v "${1}" "${db}" > "/tmp/t.$$"
  mv "/tmp/t.$$" "${db}"
  echo "removed ${1}"
}

do_list() {
  for each_name in $(awk '{print $1}' "${db}");do
    do_single_list "${each_name}"
  done
}

do_single_list() {
  record=$(grep "${1}" "${db}")
  record_name=$(echo "${record}"|awk -F: '{print $1}')
  record_age=$(echo "${record}"|awk -F: '{print $2}')
  echo "${record_name}"
  echo "${record_age}"
}

main $*

exit 0
